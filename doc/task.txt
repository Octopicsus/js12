// Задание:

// 1. Создание проекта: Инициализируйте новый проект и настройте среду для работы с Jest.
// Для этого вам потребуется создать новый каталог для проекта, инициализировать npm (npm init -y), установить Jest как зависимость разработки (npm install --save-dev jest) и добавить в package.json скрипт для запуска тестов: "test": "jest".


// 2. Тестирование функции ageClassification(num): Ваша задача – написать тесты для функции ageClassification(num), которая классифицирует возраст человека.
// Тест должен проверить корректность работы функции для всех указанных в примере диапазонов возраста.


// function ageClassification(num) {
//     return num < 0 ? null :
//       num <= 24 ? 'Детство' :
//         num <= 44 ? 'Молодость' :
//           num <= 65 ? 'Зрелость' :
//             num <= 75 ? 'Старость' :
//               num <= 90 ? 'Долголетие' :
//                 num <= 122 ? 'Рекорд' : null
//   }
  
  // console.log('    -1 :', ageClassification(-1)) // -1 : null
  // console.log('     0 :', ageClassification(0)) // 0 : null
  // console.log('     1 :', ageClassification(1)) // 1 : Детство
  // console.log('    24 :', ageClassification(24)) // 24 : Детство
  // console.log(' 24.01 :', ageClassification(24.01)) // 24.01 : Молодость
  // console.log('    44 :', ageClassification(44)) // 44 : Молодость
  // console.log(' 44.01 :', ageClassification(44.01)) // 44.01 : Зрелость
  // console.log('    65 :', ageClassification(65)) // 65 : Зрелость
  // console.log('  65.1 :', ageClassification(65.1)) // 65.1 : Старость
  // console.log('    75 :', ageClassification(75)) // 75 : Старость
  // console.log(' 75.01 :', ageClassification(75.01)) // 75.01 : Долголетие
  // console.log('    90 :', ageClassification(90)) // 90 : Долголетие
  // console.log(' 90.01 :', ageClassification(90.01)) // 90.01 : Рекорд
  // console.log('   122 :', ageClassification(122)) // 122 : Рекорд
  // console.log('122.01 :', ageClassification(122.01)) // 122.01 : null
  // console.log('   150 :', ageClassification(150)) // 150 : null


//3. Тестирование функции weekFn(cond): Напишите тесты для функции weekFn(cond), которая возвращает название дня недели по заданному числу.
// Тест должен убедиться, что функция корректно возвращает названия для чисел от 1 до 7, а также возвращает null для неподходящих значений (например, 9, 1.5, '2').

// function weekFn(cond) {
//     let str = ''
  
//     switch (cond) {
//       case 1:
//         str = 'Понедельник'
//         break
//       case 2:
//         str = 'Вторник'
//         break
//       case 3:
//         str = 'Среда'
//         break
//       case 4:
//         str = 'Четверг'
//         break
//       case 5:
//         str = 'Пятница'
//         break
//       case 6:
//         str = 'Суббота'
//         break
//       case 7:
//         str = 'Воскресенье'
//         break
//       default:
//         str = null
//     }
  
//     return str
//   }
  
//   console.log(weekFn(1))   // 'Понедельник'
//   console.log(weekFn(3))   // 'Среда'
//   console.log(weekFn(7))   // 'Воскресенье'
//   console.log(weekFn(9))   // null
//   console.log(weekFn(1.5)) // null
//   console.log(weekFn('2')) // null
  